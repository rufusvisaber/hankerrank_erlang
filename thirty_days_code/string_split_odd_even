%% challenge : Let's Review

%% Given a string, S, of length N that is indexed from 0 to N-1, 
%% print its even-indexed and odd-indexed characters as 2 space-separated strings on a single line 

%% Input Format
%% The first line contains an integer,  T(the number of test cases). 
%% Each line i of the T subsequent lines contain a String, S.

%% Output Format
%% For each String  Sj(where 0 =< J =< T-1), print Sj's even-indexed characters, followed by a space, 
%% followed by Sj's odd-indexed characters.

%% Sample Input
%% 2
%% Hacker
%% Rank

%% Sample Output
%% Hce akr
%% Rn ak

%%-module(solution).
-module(string_split_odd_even).
-export([main/0]).

main() ->
	{ok, [Num]} = io:fread("","~d"),
    main_2(Num).

main_2(0) ->
    skip;
main_2(Num) ->
    {ok, [String]} = io:fread("","~s"),
    {S1, S2} = main_3(1, length(String),String, "", ""),
    io:format("~s ~s~n",[S1,S2]),
    main_2(Num - 1).

main_3(Index, Length, _String, S1, S2) 
 when Index == Length + 1 ->
    {S1, S2};
main_3(Index, Length, String, S1, S2) ->
    S = string:sub_string(String, Index, Index),
    case Index rem 2 of
        1 ->
            main_3(Index + 1, Length, String, S1 ++ S, S2);
        _ ->
            main_3(Index + 1, Length, String, S1, S2 ++ S)
    end.
